{"version":3,"sources":["Context.js","components/GestureDiv.js","components/ScreenCalculator.js","components/KeyboardKey.js","components/KeyboardDeleteKey.js","components/Keyboard.js","components/MainCalculator.js","App.js","serviceWorker.js","index.js"],"names":["ContextCalculator","React","createContext","ContextProvider","props","useState","partialNumber","setPartialNumber","finalResult","setFinalResult","Provider","value","addNumberToParcial","newNumber","prevPartialNumber","subtractPartialNumber","lastNumberOfPartial","partailNumberToSubtract","parseInt","plusPartialNumber","deleteLastPartialNumber","substring","length","deleteAllPartialNumber","resetFinalResult","children","GestureDiv","startPositionDragX","setStartPositionDragX","startPositionDragY","setStartPositionDragY","handleGesture","endPositionDragX","endPositionDragY","dragUp","dragDown","dragLeft","dragRight","draggable","onDragStart","event","screenY","screenX","onDragEnd","preventDefault","onClick","console","log","click","onTouchStart","changedTouches","touch","onTouchEnd","emptyFunction","ScreenCalculator","useContext","className","style","padding","backgroundColor","color","KeyboadKey","valueKey","tallKey","KeyboardDeleteKey","Keyboard","display","height","width","justifyContent","MainCalculator","minWidth","minHeight","defaultProps","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9ff51e16.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst ContextCalculator = React.createContext();\r\n\r\nfunction ContextProvider(props) {\r\n  const [partialNumber, setPartialNumber] = useState(\"\");\r\n  const [finalResult, setFinalResult] = useState(0);\r\n\r\n  function plusPartialNumber(lastNumberOfPartial) {\r\n    const partailNumberToSubtract = parseInt(\r\n      \"\" + partialNumber + lastNumberOfPartial\r\n    );\r\n    setPartialNumber(\"\");\r\n    setFinalResult(() => finalResult + partailNumberToSubtract);\r\n  }\r\n\r\n  function subtractPartialNumber(lastNumberOfPartial) {\r\n    const partailNumberToSubtract = parseInt(\r\n      \"\" + partialNumber + lastNumberOfPartial\r\n    );\r\n    setPartialNumber(\"\");\r\n    setFinalResult(() => finalResult - partailNumberToSubtract);\r\n  }\r\n\r\n  function addNumberToParcial(newNumber) {\r\n    setPartialNumber((prevPartialNumber) => {\r\n      return \"\" + prevPartialNumber + newNumber;\r\n    });\r\n  }\r\n\r\n  function deleteLastPartialNumber() {\r\n    setPartialNumber((prevPartialNumber) => {\r\n      return prevPartialNumber.substring(0, prevPartialNumber.length - 1);\r\n    });\r\n  }\r\n\r\n  function deleteAllPartialNumber() {\r\n    setPartialNumber(\"\");\r\n  }\r\n\r\n  function resetFinalResult() {\r\n    setFinalResult(0);\r\n  }\r\n\r\n  return (\r\n    <ContextCalculator.Provider\r\n      value={{\r\n        partialNumber,\r\n        addNumberToParcial,\r\n        finalResult,\r\n        subtractPartialNumber,\r\n        plusPartialNumber,\r\n        deleteLastPartialNumber,\r\n        deleteAllPartialNumber,\r\n        resetFinalResult,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </ContextCalculator.Provider>\r\n  );\r\n}\r\n\r\nexport { ContextProvider, ContextCalculator };\r\n","import React, { useState, Fragment } from \"react\";\r\n\r\n/* Recibe como children el componente a renderizar dentro, y mediante props, las funciones a ejecutar en click, dragUp, dragRight, dragLeft y dragDown */\r\nexport default function GestureDiv(props) {\r\n  const [startPositionDragX, setStartPositionDragX] = useState();\r\n  const [startPositionDragY, setStartPositionDragY] = useState();\r\n  const minPixelToDrag = 20;\r\n\r\n  const handleClick = (event) => {\r\n    console.log(props.click());\r\n  };\r\n\r\n  const handleDragStart = (event) => {\r\n    setStartPositionDragY(event.screenY);\r\n    setStartPositionDragX(event.screenX);\r\n  };\r\n\r\n  function handleGesture(endPositionDragX, endPositionDragY) {\r\n    if (endPositionDragY - startPositionDragY < -minPixelToDrag) {\r\n      props.dragUp();\r\n    } else if (endPositionDragY - startPositionDragY > minPixelToDrag) {\r\n      props.dragDown();\r\n    }\r\n    if (endPositionDragX - startPositionDragX < -minPixelToDrag) {\r\n      props.dragLeft();\r\n    } else if (endPositionDragX - startPositionDragX > minPixelToDrag) {\r\n      props.dragRight();\r\n    }\r\n  }\r\n\r\n  const handleDragEnd = (event) => {\r\n    event.preventDefault();\r\n    const endPositionDragY = event.screenY;\r\n    const endPositionDragX = event.screenX;\r\n    handleGesture(endPositionDragX, endPositionDragY);\r\n  };\r\n\r\n  const handleTouchStart = (event) => {\r\n    const [touch, secondElement] = event.changedTouches;\r\n    setStartPositionDragX(touch.screenX);\r\n    setStartPositionDragY(touch.screenY);\r\n  };\r\n  const handleTouchEnd = (event) => {\r\n    const [touch, secondElement] = event.changedTouches;\r\n    const endPositionDragY = touch.screenY;\r\n    const endPositionDragX = touch.screenX;\r\n    handleGesture(endPositionDragX, endPositionDragY);\r\n  };\r\n\r\n  return (\r\n    <Fragment\r\n      draggable\r\n      onDragStart={handleDragStart}\r\n      onDragEnd={handleDragEnd}\r\n      onClick={handleClick}\r\n      onTouchStart={handleTouchStart}\r\n      onTouchEnd={handleTouchEnd}\r\n    >\r\n      {props.children}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nfunction emptyFunction() {}\r\n\r\nGestureDiv.defaultProps = {\r\n  click: emptyFunction,\r\n  dragLeft: emptyFunction,\r\n  dragRight: emptyFunction,\r\n  dragUp: emptyFunction,\r\n  dragDown: emptyFunction,\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { ContextCalculator } from \"../Context\";\r\nimport GestureDiv from \"./GestureDiv\";\r\n\r\nexport default function ScreenCalculator() {\r\n  const {\r\n    partialNumber,\r\n    finalResult,\r\n    plusPartialNumber,\r\n    subtractPartialNumber,\r\n  } = useContext(ContextCalculator);\r\n\r\n  return (\r\n    <div className=\"display-column-center\">\r\n      <h1\r\n        style={{ padding: \"40px\", backgroundColor: \"#3b6978\", color: \"white\" }}\r\n      >\r\n        {finalResult}\r\n      </h1>\r\n      <GestureDiv\r\n        dragUp={() => plusPartialNumber()}\r\n        dragDown={() => subtractPartialNumber()}\r\n      >\r\n        <h3\r\n          style={{\r\n            padding: \"20px\",\r\n            backgroundColor: \"#84a9ac\",\r\n            color: \"white\",\r\n          }}\r\n        >\r\n          {partialNumber}\r\n        </h3>\r\n      </GestureDiv>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext, useState } from \"react\";\r\nimport { ContextCalculator } from \"../Context\";\r\nimport GestureDiv from \"./GestureDiv\";\r\n\r\nexport default function KeyboadKey(props) {\r\n  const {\r\n    addNumberToParcial,\r\n    subtractPartialNumber,\r\n    plusPartialNumber,\r\n  } = useContext(ContextCalculator);\r\n  const valueKey = props.valueKey;\r\n\r\n  return (\r\n    <GestureDiv\r\n      click={() => addNumberToParcial(valueKey)}\r\n      dragUp={() => plusPartialNumber(valueKey)}\r\n      dragDown={() => subtractPartialNumber(valueKey)}\r\n    >\r\n      <div\r\n        className={\r\n          props.tallKey\r\n            ? \"keyboard-key tall-size-key display-column-center\"\r\n            : \"keyboard-key regular-size-key display-column-center\"\r\n        }\r\n      >\r\n        <div>{props.valueKey}</div>\r\n      </div>\r\n    </GestureDiv>\r\n  );\r\n}\r\n","import React, { useContext, useState } from \"react\";\r\nimport { ContextCalculator } from \"../Context\";\r\nimport GestureDiv from \"./GestureDiv\";\r\n\r\nexport default function KeyboardDeleteKey(props) {\r\n  const {\r\n    deleteLastPartialNumber,\r\n    deleteAllPartialNumber,\r\n    resetFinalResult,\r\n  } = useContext(ContextCalculator);\r\n\r\n  return (\r\n    <GestureDiv\r\n      click={deleteLastPartialNumber}\r\n      dragLeft={deleteAllPartialNumber}\r\n      dragUp={resetFinalResult}\r\n    >\r\n      <div className={\"keyboard-key regular-size-key display-column-center\"}>\r\n        <div>{props.valueKey}</div>\r\n      </div>\r\n    </GestureDiv>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport KeyboadKey from \"./KeyboardKey\";\r\nimport KeyboardDeleteKey from \"./KeyboardDeleteKey\";\r\n\r\nexport default function Keyboard() {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        height: \"60vh\",\r\n        width: \"100%\",\r\n        justifyContent: \"center\",\r\n      }}\r\n    >\r\n      <div className=\"items-column-keyboard\">\r\n        <KeyboadKey valueKey=\"1\" />\r\n        <KeyboadKey valueKey=\"4\" />\r\n        <KeyboadKey valueKey=\"7\" />\r\n      </div>\r\n      <div className=\"items-column-keyboard\">\r\n        <KeyboadKey valueKey=\"2\" />\r\n        <KeyboadKey valueKey=\"5\" />\r\n        <KeyboadKey valueKey=\"8\" />\r\n      </div>\r\n      <div className=\"items-column-keyboard\">\r\n        <KeyboadKey valueKey=\"3\" />\r\n        <KeyboadKey valueKey=\"6\" />\r\n        <KeyboadKey valueKey=\"9\" />\r\n      </div>\r\n\r\n      <div className=\"items-column-keyboard\">\r\n        <KeyboardDeleteKey valueKey=\"<\" />\r\n        <KeyboadKey valueKey=\"0\" tallKey={true} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ScreenCalculator from \"./ScreenCalculator\";\r\nimport Keyboard from \"./Keyboard\";\r\nimport { ContextProvider } from \"../Context\";\r\n\r\nexport default function MainCalculator() {\r\n  return (\r\n    <ContextProvider>\r\n      <div\r\n        className=\"display-column-center\"\r\n        style={{\r\n          minWidth: \"100vw\",\r\n          minHeight: \"80vh\",\r\n          justifyContent: \"space-between\",\r\n        }}\r\n      >\r\n        <ScreenCalculator />\r\n        <Keyboard />\r\n      </div>\r\n    </ContextProvider>\r\n  );\r\n}\r\n","import React from \"react\";\nimport \"./App.css\";\nimport \"./components/components-style.css\";\nimport MainCalculator from \"./components/MainCalculator\";\n\nfunction App() {\n  return <MainCalculator />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}